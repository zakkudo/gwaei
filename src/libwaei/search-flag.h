
#define LW_SEARCH_FLAG_NAME_RAW "Raw"
#define LW_SEARCH_FLAG_NAME_FURIGANA_INSENSITIVE "Furigana Insensitive"
#define LW_SEARCH_FLAG_NAME_CASE_INSENSITIVE "Case Insensitive"
#define LW_SEARCH_FLAG_NAME_STEM_INSENSITIVE "Stem Insensitive"
#define LW_SEARCH_FLAG_NAME_ROMAJI_TO_FURIGANA "Romaji to Furigana"
#define LW_SEARCH_FLAG_NAME_USE_INDEX "Use Index"
#define LW_SEARCH_FLAG_NAME_INSENSITIVE "Insensitive"

#define LW_SEARCH_FLAG_NICK_RAW "raw"
#define LW_SEARCH_FLAG_NICK_FURIGANA_INSENSITIVE "furigana-insensitive"
#define LW_SEARCH_FLAG_NICK_CASE_INSENSITIVE "case-insensitive"
#define LW_SEARCH_FLAG_NICK_STEM_INSENSITIVE "stem-insensitive"
#define LW_SEARCH_FLAG_NICK_ROMAJI_TO_FURIGANA "romaji-to furigana"
#define LW_SEARCH_FLAG_NICK_USE_INDEX "use-index"
#define LW_SEARCH_FLAG_NICK_INSENSITIVE "insensitive"

typedef enum {
  LW_SEARCH_FLAG_RAW = (1 << 0),
  LW_SEARCH_FLAG_FURIGANA_INSENSITIVE = (1 << 1),
  LW_SEARCH_FLAG_CASE_INSENSITIVE = (1 << 2),
  LW_SEARCH_FLAG_STEM_INSENSITIVE = (1 << 3),
  LW_SEARCH_FLAG_ROMAJI_TO_FURIGANA = (1 << 4),
  LW_SEARCH_FLAG_USE_INDEX = (1 << 5),
  LW_SEARCH_FLAG_INSENSITIVE = (LW_SEARCH_FLAG_FURIGANA_INSENSITIVE | LW_SEARCH_FLAG_CASE_INSENSITIVE | LW_SEARCH_FLAG_STEM_INSENSITIVE),
} LwSearchFlag;
GType lw_search_flag_get_type (void);
#define LW_TYPE_SEARCH_FLAG (lw_search_flag_get_type ())
